/**
 * Holds all API configuration that is read from a single definition file.
 * This file reads the definition and create API structure in code, that would be later
 * generated into .ts files in your project.
 */
export default class GeneratorApiConfiguration {
    /**
     * Name of API from swagger definition.
     */
    private _name;
    /**
     * Path to swagger definition file.
     */
    private readonly _pathToDefinition;
    /**
     * Path to the folder that would contain all output files generated by this API definition.
     */
    private readonly _pathToOutputFolder;
    /**
     * The URL to the server that AXIOS should send requests to. This is used to define the axios client, create
     * one if it does not exist and use the name of the client in the actions functions to call action in
     * correct axios client.
     */
    private _serverUrl;
    /**
     * API request/result models used for transferring data via REST API.
     */
    private _models;
    /**
     * Paths that are defined in the swagger file. Basically these are the endpoints on the remote server that
     * are accessed by action functions.
     */
    private _paths;
    constructor(pathToDefinition: string, pathToBuild: string);
    /**
     * Used to retrieve the name of the definition file. Is used to create a reducer and add a new axios client
     * whether it is required.
     */
    getFileName(): string;
    /**
     * Used by external Promise to create API structure. If something goes wrong it
     * calls reject function with error.
     * @param resolve Function called when method finishes successfully.
     * @param reject Function called when error occurs.
     */
    createApiStructure: (resolve: any, reject: any) => Promise<void>;
    /**
     * Used by Promise to generate API files for this API configuration. If something goes wrong it
     * calls reject function with error.
     * @param resolve Function called when method finishes successfully.
     * @param reject Function called when error occurs.
     */
    generateApiOutputs: (resolve: any, reject: any) => void;
}
